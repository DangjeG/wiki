components:
  schemas:
    ApproveUser:
      properties:
        api_client_description:
          anyOf:
          - type: string
          - type: 'null'
          title: Api Client Description
        responsibility:
          $ref: '#/components/schemas/ResponsibilityType'
        user_id:
          format: uuid
          title: User Id
          type: string
      required:
      - user_id
      - responsibility
      title: ApproveUser
      type: object
    BaseResponse:
      properties:
        msg:
          default: ''
          title: Msg
          type: string
        status:
          default: success
          title: Status
          type: string
      title: BaseResponse
      type: object
    CreateOrganization:
      properties:
        access:
          $ref: '#/components/schemas/OrganizationAccessType'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        name:
          title: Name
          type: string
      required:
      - name
      - access
      title: CreateOrganization
      type: object
    CreatePermissionDomain:
      properties:
        domain:
          title: Domain
          type: string
        mode:
          $ref: '#/components/schemas/DomainPermissionMode'
      required:
      - domain
      - mode
      title: CreatePermissionDomain
      type: object
    CreateUser:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_user_agreement_accepted:
          default: false
          title: Is User Agreement Accepted
          type: boolean
        last_name:
          title: Last Name
          type: string
        organization_id:
          format: uuid
          title: Organization Id
          type: string
        position:
          anyOf:
          - type: string
          - type: 'null'
          title: Position
        second_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Second Name
        username:
          title: Username
          type: string
      required:
      - email
      - username
      - first_name
      - last_name
      - organization_id
      title: CreateUser
      type: object
    CreateVerifiedUser:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_enabled:
          default: true
          title: Is Enabled
          type: boolean
        is_user_agreement_accepted:
          default: true
          title: Is User Agreement Accepted
          type: boolean
        is_verified_email:
          default: true
          title: Is Verified Email
          type: boolean
        last_name:
          title: Last Name
          type: string
        organization_id:
          format: uuid
          title: Organization Id
          type: string
        position:
          anyOf:
          - type: string
          - type: 'null'
          title: Position
        second_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Second Name
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
        wiki_api_client:
          $ref: '#/components/schemas/CreateWikiApiClient'
      required:
      - email
      - first_name
      - last_name
      - organization_id
      - wiki_api_client
      title: CreateVerifiedUser
      type: object
    CreateWikiApiClient:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        is_enabled:
          default: true
          title: Is Enabled
          type: boolean
        responsibility:
          allOf:
          - $ref: '#/components/schemas/ResponsibilityType'
          default: VIEWER
      title: CreateWikiApiClient
      type: object
    DomainPermissionMode:
      enum:
      - REFUSE
      - ACCEPT
      title: DomainPermissionMode
      type: string
    FrontendUserLogin:
      properties:
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      title: FrontendUserLogin
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HealthCheck:
      description: Response model to validate and return when performing a health
        check.
      properties:
        status:
          default: OK
          title: Status
          type: string
      title: HealthCheck
      type: object
    OrganizationAccessType:
      enum:
      - LOCKED
      - WEB_ONLY
      - FULL_ACCESS
      title: OrganizationAccessType
      type: string
    OrganizationInfoResponse:
      properties:
        access:
          $ref: '#/components/schemas/OrganizationAccessType'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        name:
          title: Name
          type: string
      required:
      - id
      - name
      - description
      - access
      title: OrganizationInfoResponse
      type: object
    PermissionDomainInfoResponse:
      properties:
        created_at:
          format: date-time
          title: Created At
          type: string
        domain:
          title: Domain
          type: string
        id:
          format: uuid
          title: Id
          type: string
        is_enabled:
          title: Is Enabled
          type: boolean
        mode:
          $ref: '#/components/schemas/DomainPermissionMode'
      required:
      - id
      - domain
      - mode
      - is_enabled
      - created_at
      title: PermissionDomainInfoResponse
      type: object
    ResponsibilityType:
      enum:
      - VIEWER
      - EDITOR
      - ADMIN
      title: ResponsibilityType
      type: string
    UpdateOrganization:
      properties:
        access:
          anyOf:
          - $ref: '#/components/schemas/OrganizationAccessType'
          - type: 'null'
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
      title: UpdateOrganization
      type: object
    UpdatePermissionDomain:
      properties:
        domain:
          anyOf:
          - type: string
          - type: 'null'
          title: Domain
        mode:
          anyOf:
          - $ref: '#/components/schemas/DomainPermissionMode'
          - type: 'null'
      title: UpdatePermissionDomain
      type: object
    UpdateWikiApiClient:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        is_enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Enabled
        responsibility:
          anyOf:
          - $ref: '#/components/schemas/ResponsibilityType'
          - type: 'null'
      title: UpdateWikiApiClient
      type: object
    UserInfoResponse:
      properties:
        email:
          format: email
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_enabled:
          title: Is Enabled
          type: boolean
        is_user_agreement_accepted:
          title: Is User Agreement Accepted
          type: boolean
        is_verified_email:
          title: Is Verified Email
          type: boolean
        last_name:
          title: Last Name
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationInfoResponse'
        position:
          anyOf:
          - type: string
          - type: 'null'
          title: Position
        second_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Second Name
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
        wiki_api_client:
          anyOf:
          - $ref: '#/components/schemas/WikiApiClientInfoResponse'
          - type: 'null'
      required:
      - email
      - first_name
      - last_name
      - is_user_agreement_accepted
      - is_verified_email
      - is_enabled
      - organization
      title: UserInfoResponse
      type: object
    UserSignResponse:
      properties:
        email_to:
          format: email
          title: Email To
          type: string
        expire_minutes:
          default: 5
          title: Expire Minutes
          type: integer
        verify_token:
          title: Verify Token
          type: string
      required:
      - email_to
      - verify_token
      title: UserSignResponse
      type: object
    UserUpdate:
      properties:
        email:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
        is_enabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Enabled
        is_user_agreement_accepted:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is User Agreement Accepted
        is_verified_email:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Verified Email
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
        organization_id:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Organization Id
        position:
          anyOf:
          - type: string
          - type: 'null'
          title: Position
        second_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Second Name
        username:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
        wiki_api_client_id:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Wiki Api Client Id
      title: UserUpdate
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    WikiApiClientInfoResponse:
      properties:
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        id:
          format: uuid
          title: Id
          type: string
        is_enabled:
          default: true
          title: Is Enabled
          type: boolean
        responsibility:
          allOf:
          - $ref: '#/components/schemas/ResponsibilityType'
          default: VIEWER
      required:
      - id
      title: WikiApiClientInfoResponse
      type: object
    WikiApiKeyInfoResponse:
      properties:
        api_key:
          title: Api Key
          type: string
        api_key_prefix:
          title: Api Key Prefix
          type: string
        create_date:
          format: date-time
          title: Create Date
          type: string
        expires_date:
          format: date-time
          title: Expires Date
          type: string
      required:
      - api_key
      - expires_date
      - create_date
      - api_key_prefix
      title: WikiApiKeyInfoResponse
      type: object
  securitySchemes:
    WikiAccessToken:
      in: cookie
      name: wiki_access_token
      type: apiKey
    WikiApiKey:
      in: header
      name: X-Wiki-API-Key
      type: apiKey
    WikiBearer:
      scheme: bearer
      type: http
    WikiRootApiKey:
      description: 'Root key, allows you to perform actions as administrator, random
        user data is generated.

        **Limitation:** operations requiring an explicitly registered userare unavailable,
        example.: `Create: POST /api_key/`.'
      in: header
      name: X-Wiki-ROOT-API-Key
      type: apiKey
info:
  description: Welcome to Wiki's API documentation! Here you will able to discover
    all of the ways you can interact with the Wiki API.
  title: Wiki API
  version: 0.0.1
openapi: 3.1.0
paths:
  /api/v1/admins/approve_user:
    post:
      operationId: approve_user_api_v1_admins_approve_user_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Approve the user for access to the system
      tags:
      - Admins
  /api/v1/api_client/:
    put:
      operationId: update_wiki_api_client_api_v1_api_client__put
      parameters:
      - in: query
        name: wiki_api_client_id
        required: true
        schema:
          format: uuid
          title: Wiki Api Client Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWikiApiClient'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiApiClientInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Update wiki api client
      tags:
      - WikiApiClient
  /api/v1/api_key/:
    delete:
      operationId: delete_wiki_api_key_api_v1_api_key__delete
      parameters:
      - in: query
        name: api_key_id
        required: true
        schema:
          format: uuid
          title: Api Key Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Delete wiki api key
      tags:
      - WikiApiClient
    post:
      operationId: create_wiki_api_key_api_v1_api_key__post
      parameters:
      - in: query
        name: expires_date
        required: true
        schema:
          format: date-time
          title: Expires Date
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WikiApiKeyInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Create wiki api key
      tags:
      - WikiApiClient
  /api/v1/api_key/deactivate:
    put:
      operationId: deactivate_wiki_api_key_api_v1_api_key_deactivate_put
      parameters:
      - in: query
        name: api_key_id
        required: true
        schema:
          format: uuid
          title: Api Key Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Deactivate wiki api key
      tags:
      - WikiApiClient
  /api/v1/auth/login:
    post:
      description: '## Logging in to a user account

        The endpoint for sending an email or username and receiving a login confirmation
        token.

        A confirmation code will be sent to the specified email.'
      operationId: login_api_v1_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FrontendUserLogin'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignResponse'
          description: Verification token data.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login by email or username
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      description: '## Registration - submitting an application

        Sending an application for registration in the system.'
      operationId: signup_api_v1_auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignResponse'
          description: Verification token data.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup with user data entry
      tags:
      - Auth
  /api/v1/auth/verify:
    get:
      description: '## Verification on the sent code

        Endpoint for confirming the code received by mail, issuing access token to
        perform authorized actions.'
      operationId: verify_api_v1_auth_verify_get
      parameters:
      - in: query
        name: token
        required: true
        schema:
          title: Token
          type: string
      - in: query
        name: verification_code
        required: true
        schema:
          title: Verification Code
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Cookies are set. Success message.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Verification by token and code
      tags:
      - Auth
  /api/v1/organization/:
    post:
      description: Create organization.
      operationId: create_organization_api_v1_organization__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganization'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Create Organization
      tags:
      - Organization
    put:
      description: Update organization.
      operationId: update_organizations_api_v1_organization__put
      parameters:
      - in: query
        name: organization_id
        required: true
        schema:
          format: uuid
          title: Organization Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Update Organizations
      tags:
      - Organization
  /api/v1/organization/all:
    get:
      description: Get all organizations.
      operationId: get_organizations_api_v1_organization_all_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OrganizationInfoResponse'
                title: Response Get Organizations Api V1 Organization All Get
                type: array
          description: Successful Response
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get Organizations
      tags:
      - Organization
  /api/v1/organization/info:
    get:
      description: Get organization by id.
      operationId: get_organization_api_v1_organization_info_get
      parameters:
      - in: query
        name: organization_id
        required: true
        schema:
          format: uuid
          title: Organization Id
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get Organization
      tags:
      - Organization
  /api/v1/permission/domain/:
    post:
      operationId: create_permission_domain_api_v1_permission_domain__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionDomain'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDomainInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Create a new domain permission for signup
      tags:
      - Permissions
    put:
      operationId: update_permission_domain_api_v1_permission_domain__put
      parameters:
      - in: query
        name: id
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Id
      - in: query
        name: domain
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Domain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionDomain'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDomainInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Update permission domain by id or domain name
      tags:
      - Permissions
  /api/v1/permission/domain/all:
    get:
      operationId: get_permission_domains_api_v1_permission_domain_all_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PermissionDomainInfoResponse'
                title: Response Get Permission Domains Api V1 Permission Domain All
                  Get
                type: array
          description: Successful Response
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get all permission domain
      tags:
      - Permissions
  /api/v1/permission/domain/info:
    get:
      operationId: get_permission_domain_info_api_v1_permission_domain_info_get
      parameters:
      - in: query
        name: id
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: Id
      - in: query
        name: domain
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Domain
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDomainInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get permission domain by id or domain name
      tags:
      - Permissions
  /api/v1/user/:
    delete:
      operationId: delete_user_api_v1_user__delete
      parameters:
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: User Id
      - in: query
        name: username
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      - in: query
        name: email
        required: false
        schema:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Delete user
      tags:
      - User
    put:
      operationId: update_user_api_v1_user__put
      parameters:
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: User Id
      - in: query
        name: username
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      - in: query
        name: email
        required: false
        schema:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Update user
      tags:
      - User
  /api/v1/user/all:
    get:
      operationId: get_users_api_v1_user_all_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserInfoResponse'
                title: Response Get Users Api V1 User All Get
                type: array
          description: Successful Response
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get all users
      tags:
      - User
  /api/v1/user/info:
    get:
      operationId: get_user_api_v1_user_info_get
      parameters:
      - in: query
        name: user_id
        required: false
        schema:
          anyOf:
          - format: uuid
            type: string
          - type: 'null'
          title: User Id
      - in: query
        name: username
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Username
      - in: query
        name: email
        required: false
        schema:
          anyOf:
          - format: email
            type: string
          - type: 'null'
          title: Email
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get user by id or username or email
      tags:
      - User
  /api/v1/user/me:
    get:
      operationId: get_me_api_v1_user_me_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
          description: Successful Response
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Get info about the current user
      tags:
      - User
  /api/v1/user/verified:
    post:
      operationId: create_verified_user_api_v1_user_verified_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVerifiedUser'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - WikiRootApiKey: []
      - WikiApiKey: []
      - WikiApiKey: []
      - WikiAccessToken: []
      - WikiBearer: []
      summary: Create a verified user (has access to the system)
      tags:
      - User
  /health:
    get:
      description: "## Perform a Health Check\nEndpoint to perform a healthcheck on.\
        \ This endpoint can primarily be used Docker\nto ensure a robust container\
        \ orchestration and management is in place. Other\nservices which rely on\
        \ proper functioning of the API service will not deploy if this\nendpoint\
        \ returns any other HTTP status code except 200 (OK).\nReturns:\n    HealthCheck:\
        \ Returns a JSON response with the health status"
      operationId: get_health_health_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
          description: Return HTTP Status Code 200 (OK)
      summary: Perform a Health Check
      tags:
      - HealthCheck
servers:
- description: Local server
  url: http://localhost:8000/
- description: Demo server
  url: https://api.wiki.example.com/
- description: Ngrok
  url: https://2fdc-176-59-193-145.ngrok-free.app/
